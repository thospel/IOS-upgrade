# Load IOS table

# Load IOS upgrade table
[Define Variable=ios_table,Single,BodyFromFile=${env.ios_table}]

[Define]
parser_version = 1

probe      = ${caller.probe}
series     = ${caller.series}
top_verify = 1
top_ftp    = 1
top_debug  = 0
top_version=

matches =

verify=
ftp=
debug=
image=
md5=
rom_file=
rom_id=
rom_md5=

# Determine if we need an upgrade and to what we need to upgrade
[While Regex,IgnoreCase,Verbose,FromVariable=ios_table,Single]
(?<comment>\#.*)				|	# Comment
(?<var_name>verify|ftp|debug) [^\S\n]* = [^\S\n]* (?<var_value>[01])	|	# boolean variable
(?<var_name>version) [^\S\n]* = [^\S\n]* (?<var_value>\d+)	|	# numeric variable
series [^\S\n]*  : [^\S\n]* (?<model>\S+)
   (?<body>
     (\n
        (?:
            [^\S\n] .* |				# indented line
            [^\S\n]* (?: \#.* | )			# empty line/comment
        )
     )*
   )						|	# model/body
(?<other>.+)

    # Set empty values if there is no match
    [Assign]
    var_name   = ${var_name|}
    model      = ${model|}
    other      = ${other|}
    comment    = ${comment|}

    [If Not,FromVariable=var_name]
    ${}
        [If IgnoreCase,FromVariable=var_name]
        verify
            [Assign]
            top_verify = ${var_value}
        [ElseIf IgnoreCase,FromVariable=var_name]
        ftp
            [Assign]
            top_ftp    = ${var_value}
        [ElseIf IgnoreCase,FromVariable=var_name]
        version
            [Assign]
            top_version    = ${var_value}
            [If Not,FromVariable=top_version]
            ${parser_version}
                [Error]
                IOS file: Format version ${top_version}, expected ${parser_version}
            [EndIf]
        [ElseIf IgnoreCase,FromVariable=var_name]
        debug
            [Assign]
            top_debug    = ${var_value}
        [Else]
            [Error]
            Assertion; No handler for top level variable ${var_name}
        [EndIf]
    [ElseIf Not,FromVariable=other]
    ${}
        [Error]
        IOS file: Cannot parse '${other}'
    [ElseIf Not,FromVariable=model]
    ${}
        # Make initial \n into a comment
        [Assign]
        body = #${body}

        [Define]
        local_verify   = ${top_verify}
        local_ftp      = ${top_ftp}
        local_debug    = ${top_debug}
        local_image    =
        local_md5      =
        local_rom_file =
        local_rom_id   =
        local_rom_md5  =

        [While Regex,IgnoreCase,Verbose,FromVariable=body,Single]
        [^\S\n]* (?:
          (?<comment0>\#.*)				  | # Comment
          (?<var_name0>verify|ftp|debug)    [^\S\n]* = [^\S\n]* (?<var_value0>[01])   | # boolean var
          (?<var_name0>Image|RomFile|RomId) [^\S\n]* = [^\S\n]* (?<var_value0>\S+)    | # string var
          (?<var_name0>md5|RomMd5)          [^\S\n]* = [^\S\n]* (?<var_value0>[0-9a-f]{32}) # hex var
        ) |
        (?<other0>.+)

            # Set empty values if there is no match
            [Assign]
            var_name0   = ${var_name0|}
            other0      = ${other0|}
            comment0    = ${comment0|}

            [If Not,FromVariable=var_name0]
            ${}
                [If IgnoreCase,FromVariable=var_name0]
                verify
                    [Assign]
                    local_verify = ${var_value0}
                [ElseIf IgnoreCase,FromVariable=var_name0]
                ftp
                    [Assign]
                    local_ftp = ${var_value0}
                [ElseIf IgnoreCase,FromVariable=var_name0]
                debug
                    [Assign]
                    local_debug = ${var_value0}
                [ElseIf IgnoreCase,FromVariable=var_name0]
                image
                    [Assign]
                    local_image = ${var_value0}
                [ElseIf IgnoreCase,FromVariable=var_name0]
                md5
                    [Assign]
                    local_md5 = ${var_value0}
                [ElseIf IgnoreCase,FromVariable=var_name0]
                RomFile
                    [Assign]
                    local_rom_file = ${var_value0}
                [ElseIf IgnoreCase,FromVariable=var_name0]
                RomId
                    [Assign]
                    local_rom_id = ${var_value0}
                [ElseIf IgnoreCase,FromVariable=var_name0]
                RomMd5
                    [Assign]
                    local_rom_md5 = ${var_value0}
                [Else]
                    [Error]
                    Assertion; No handler for series variable ${var_name}
                [EndIf]
            [ElseIf Not,FromVariable=other0]
            ${}
                [Error]
                IOS file: Cannot parse '${other0}'
            [ElseIf FromVariable=comment0]
            ${}
                [Error]
                IOS file: Internal body parse error
            [EndIf]
        [Else]
            [Error]
            IOS file: Empty series
        [EndWhile]

        [If FromVariable=local_image]
        ${}
            [Error]
            Series ${model}: Missing image setting
        [EndIf]

        [If FromVariable=local_rom_file]
        ${}
            [If Not,FromVariable=local_rom_id]
            ${}
                [Error]
                Series ${model}: RomId without RomFile
            [EndIf]

            [If Not,FromVariable=local_rom_md5]
            ${}
                [Error]
                Series ${model}: RomMd5 without RomFile
            [EndIf]
        [Else]
            [If FromVariable=local_rom_id]
            ${}
                [Error]
                Series ${model}: RomFile without RomId
            [EndIf]
        [EndIf]

        [If IgnoreCase,FromVariable=model]
        ${series}
            [Assign]
            verify   = ${local_verify}
            ftp      = ${local_ftp}
            debug    = ${local_debug}
            image    = ${local_image}
            md5      = ${local_md5}
            rom_file = ${local_rom_file}
            rom_id   = ${local_rom_id}
            rom_md5  = ${local_rom_md5}

            matches = ${matches}=
        [EndIf]

    [ElseIf FromVariable=comment]
    ${}
        [Error]
        IOS file: Internal parse error
    [EndIf]

    [Else]
        [Error]
        IOS file: Empty
[EndWhile]

[If FromVariable=top_version]
${}
    [Error]
    IOS file: No format version setting
[EndIf]

[If Not,FromVariable=debug]
0
    [Print]
    verify   = ${verify}
    ftp      = ${ftp}
    debug    = ${debug}

    image    = ${image}
    md5      = ${md5}

    rom_file = ${rom_file}
    rom_id   = ${rom_id}
    rom_md5  = ${rom_md5}
[EndIf]

[If Not,FromVariable=series]
${}
    [If FromVariable=matches]
    ${}
        [If Not,FromVariable=probe]
        1
            [Error]
            No matching entry for series '${series}' in IOS table
        [EndIf]

    [ElseIf Regex,FromVariable=matches]
    ==+
        [Error]
        Multiple matching entries for series '${series}' in IOS table
    [EndIf]
[EndIf]

[Return]
verify = ${verify}
ftp    = ${ftp}
debug  = ${debug}
image  = ${image}
md5    = ${md5}
rom_file = ${rom_file}
rom_id = ${rom_id}
rom_md5  = ${rom_md5}
